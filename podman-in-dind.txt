apt update
apt install --no-install-recommends podman uidmap slirp4netns skopeo jq binfmt-support qemu-user-static -y
/etc/init.d/binfmt-support start

useradd -s /bin/bash -d /home/dockremap -m dockremap
echo dockremap:100000:65536 | tee -a /etc/subuid
echo dockremap:100000:65536 | tee -a /etc/subgid

mkdir src && cd src
touch imageDetail.json

cat <<'EOF'> Dockerfile
FROM docker.io/library/nginx:stable
WORKDIR /app
COPY imageDetail.json .
RUN nginx -v && dpkg --print-architecture
HEALTHCHECK --start-period=1s --timeout=10s --interval=10s \
  CMD curl -fsSL -H 'User-Agent: HealthCheck' http://127.0.0.1:80
EOF

su dockremap -c '
  set -ex
  podman build --platform=linux/amd64 --format=docker --timestamp=1 -t website:amd64 .
  podman build --platform=linux/arm64/v8 --format=docker --timestamp=1 -t website:arm64 .
  podman manifest create website:v1 docker-archive://tmp/website-amd64.tar docker-archive://tmp/website-arm64.tar
  podman manifest push --all website:v1 oci-archive://tmp/website.tar
'
skopeo inspect --raw oci-archive://tmp/website.tar | jq

docker run -d --rm --name registry -p 5000:5000 docker.io/library/registry:2
skopeo copy --all \
  oci-archive://tmp/website.tar \
  docker://localhost:5000/website:v1 \
  --dest-tls-verify=false
skopeo copy --override-arch=amd64 \
  oci-archive://tmp/website.tar \
  docker://localhost:5000/website:v1-amd64 \
  --dest-tls-verify=false
skopeo copy --override-arch=arm64 \
  oci-archive://tmp/website.tar \
  docker://localhost:5000/website:v1-arm64 \
  --dest-tls-verify=false
skopeo inspect --tls-verify=false docker://localhost:5000/website:v1

docker pull localhost:5000/website:v1
docrer images
